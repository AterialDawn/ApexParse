<MW:MetroWindow x:Class="ApexParse.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ApexParse"
        xmlns:conv="clr-namespace:ApexParse.Views.Converters"
        xmlns:MW="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:Behaviors="clr-namespace:ApexParse.Views.Behaviors"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        x:ClassModifier="internal"
        Title="ApexParse" Height="{Binding SettingsVM.Height,Mode=TwoWay,FallbackValue=390}" Width="{Binding SettingsVM.Width,Mode=TwoWay,FallbackValue=850}" SaveWindowPosition="True" ShowMaxRestoreButton="False" TitlebarHeight="20" AllowsTransparency="True" Opacity="{Binding SettingsVM.WindowOpacity}">
    <i:Interaction.Behaviors>
        <Behaviors:WindowTopmostBehavior StayTopmost="{Binding SettingsVM.WindowTopmost}" />
    </i:Interaction.Behaviors>
    <Window.Resources>
        <Style x:Key="MenuCommandStyle" TargetType="MenuItem">
            <Setter Property="Margin"
                    Value="0,0,0,0"></Setter>
        </Style>
        <conv:BoolToVisConverter x:Key="BoolToVisConvert" />
    </Window.Resources>
    <MW:MetroWindow.LeftWindowCommands>
        <MW:WindowCommands>
            <Button HorizontalAlignment="Left">
                <i:Interaction.Behaviors>
                    <Behaviors:ContextMenuOnLeftClickBehavior />
                </i:Interaction.Behaviors>
                <Button.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="End Session" Command="{Binding SaveSessionCommand}" />
                        <MenuItem Header="Reset Parser" Command="{Binding ResetTrackerCommand}" />
                        <MenuItem Header="Reselect damagelogs folder" Command="{Binding ReselectDamageLogsCommand}"/>
                        <Separator />
                        <MenuItem Header="Sessions..." ItemsSource="{Binding SavedSessions}" IsEnabled="{Binding HasSessions}">
                            <MenuItem.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding SessionName}"/>
                                </DataTemplate>
                            </MenuItem.ItemTemplate>
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Command" Value="{Binding OpenSessionLogCommand}"/>
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                    </ContextMenu>
                </Button.ContextMenu>
                <TextBlock>File</TextBlock>
            </Button>

            <Button HorizontalAlignment="Left">
                <i:Interaction.Behaviors>
                    <Behaviors:ContextMenuOnLeftClickBehavior />
                </i:Interaction.Behaviors>
                <Button.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Separate Zanverse" IsCheckable="True" IsChecked="{Binding SeparateZanverse}" IsEnabled="{Binding IsParsingInactive}"/>
                        <MenuItem Header="Background DPS Highlighting" IsCheckable="True" IsChecked="{Binding HighlightDPS}" IsEnabled="{Binding IsParsingInactive}"/>
                        <MenuItem Header="Shorten DPS Readouts" IsCheckable="True" IsChecked="{Binding ShortenDPSReadout}" IsEnabled="{Binding IsParsingInactive}"/>
                        <MenuItem Header="Auto Open Player Tab for Self" IsCheckable="True" IsChecked="{Binding OpenGraphForSelfAutomatically}" IsEnabled="{Binding IsParsingInactive}" />
                        <MenuItem Header="Show Graph" IsCheckable="True" IsChecked="{Binding SettingsVM.ChartVisibility, Converter={StaticResource BoolToVisConvert}}" />
                        <MenuItem Header="Visible Lines...">
                            <MenuItem Header="Total Damage Dealt" IsCheckable="True" IsChecked="{Binding LineSeriesSettings.TotalDamageEnabled}" />
                            <MenuItem Header="Total Damage Taken" IsCheckable="True" IsChecked="{Binding LineSeriesSettings.TakenDamageEnabled}" />
                            <MenuItem Header="DPS" IsCheckable="True" IsChecked="{Binding LineSeriesSettings.TotalDPSEnabled}" />
                            <MenuItem Header="Instance DPS" IsCheckable="True" IsChecked="{Binding LineSeriesSettings.InstanceDPSEnabled}" />
                            <MenuItem Header="MPA Average" IsCheckable="True" IsChecked="{Binding LineSeriesSettings.MPAAverageEnabled}" />
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Set Custom Accent Color" Command="{Binding SetAccentColorCommand}" IsEnabled="{Binding IsParsingInactive}"/>
                        <MenuItem Header="Set Background Image" Command="{Binding SetBackgroundImageCommand}" IsEnabled="{Binding IsParsingInactive}"/>
                        <MenuItem Header="Always on top" IsCheckable="True" IsChecked="{Binding SettingsVM.WindowTopmost}" />
                        <MenuItem Header="Software Rendering" IsCheckable="True" IsChecked="{Binding SettingsVM.SoftwareRenderingEnabled}" />
                        <MenuItem Header="Window Opacity...">
                            <MenuItem Header="20%" Command="{Binding SetWindowTransparencyCommand}" CommandParameter=".2" />
                            <MenuItem Header="40%" Command="{Binding SetWindowTransparencyCommand}" CommandParameter=".4" />
                            <MenuItem Header="60%" Command="{Binding SetWindowTransparencyCommand}" CommandParameter=".6" />
                            <MenuItem Header="80%" Command="{Binding SetWindowTransparencyCommand}" CommandParameter=".8" />
                            <MenuItem Header="100%" Command="{Binding SetWindowTransparencyCommand}" CommandParameter="1" />
                        </MenuItem>
                        <MenuItem Header="Detailed Damage Info...">
                            <MenuItem Header="Enabled" IsCheckable="True" IsChecked="{Binding SettingsVM.EnableDetailedDamageInfo}"></MenuItem>
                            <Separator />
                            <MenuItem Header="Name" IsCheckable="True" IsChecked="{Binding DetailedDamageVisibleSettings.Name, Converter={StaticResource BoolToVisConvert}}" />
                            <MenuItem Header="Count" IsCheckable="True" IsChecked="{Binding DetailedDamageVisibleSettings.Count, Converter={StaticResource BoolToVisConvert}}" />
                            <MenuItem Header="Total Damage" IsCheckable="True" IsChecked="{Binding DetailedDamageVisibleSettings.TotalDamage, Converter={StaticResource BoolToVisConvert}}" />
                            <MenuItem Header="JA %" IsCheckable="True" IsChecked="{Binding DetailedDamageVisibleSettings.JAPercent, Converter={StaticResource BoolToVisConvert}}" />
                            <MenuItem Header="Crit %" IsCheckable="True" IsChecked="{Binding DetailedDamageVisibleSettings.CritPercent, Converter={StaticResource BoolToVisConvert}}" />
                            <MenuItem Header="Min Damage" IsCheckable="True" IsChecked="{Binding DetailedDamageVisibleSettings.MinDamage, Converter={StaticResource BoolToVisConvert}}" />
                            <MenuItem Header="Average Damage" IsCheckable="True" IsChecked="{Binding DetailedDamageVisibleSettings.AverageDamage, Converter={StaticResource BoolToVisConvert}}" />
                            <MenuItem Header="Max Damage" IsCheckable="True" IsChecked="{Binding DetailedDamageVisibleSettings.MaxDamage, Converter={StaticResource BoolToVisConvert}}" />
                        </MenuItem>
                    </ContextMenu>
                </Button.ContextMenu>
                <TextBlock>Options</TextBlock>
            </Button>
        </MW:WindowCommands>
    </MW:MetroWindow.LeftWindowCommands>

    <Grid Background="#333333">
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="20"></RowDefinition>
        </Grid.RowDefinitions>
        <Image Grid.Row="0" Source="{Binding BackgroundImagePath}" IsEnabled="{Binding HasBackgroundImage}" Stretch="Fill" RenderOptions.BitmapScalingMode="HighQuality">
        </Image>
        <Grid Grid.Row="0">
            <TabControl ItemsSource="{Binding AllTabs}" SelectedItem="{Binding SelectedTab, Mode=TwoWay}" Background="#30000000" Padding="0">
                <TabControl.Resources>
                </TabControl.Resources>
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding TabName}" FontSize="14" Foreground="White" />
                    </DataTemplate>
                </TabControl.ItemTemplate>
            </TabControl>
        </Grid>
        <StatusBar Grid.Row="1" Background="#333333">
            <TextBlock Text="{Binding StatusBarText, FallbackValue='Waiting...'}" Foreground="#cccccc"></TextBlock>
        </StatusBar>
    </Grid>
</MW:MetroWindow>
